// Script para crear √≠ndices MongoDB cr√≠ticos para optimizaci√≥n de rendimiento
// Ejecutar este script despu√©s de aplicar las optimizaciones

console.log('üîß Creando √≠ndices MongoDB cr√≠ticos para optimizaci√≥n...');

// Conectar a MongoDB (ajustar la URL seg√∫n tu configuraci√≥n)
// Ejecutar estos comandos en MongoDB Compass, mongo shell, o como script

const indices = [
  // √çNDICES PARA AERONAVES
  {
    collection: 'aeronaves',
    index: { "estado": 1, "createdAt": -1 },
    description: 'Optimiza filtros por estado y ordenamiento por fecha'
  },
  {
    collection: 'aeronaves', 
    index: { "tipo": 1, "estado": 1 },
    description: 'Optimiza estad√≠sticas por tipo y estado'
  },
  {
    collection: 'aeronaves',
    index: { "matricula": 1 },
    description: 'B√∫squedas por matr√≠cula (√∫nico)'
  },

  // √çNDICES PARA COMPONENTES
  {
    collection: 'componentes',
    index: { "aeronaveActual": 1, "estado": 1 },
    description: 'Consultas de componentes por aeronave y estado'
  },
  {
    collection: 'componentes',
    index: { "alertasActivas": 1, "estado": 1 },
    description: 'Filtros por alertas y estado'
  },
  {
    collection: 'componentes',
    index: { "categoria": 1, "estado": 1 },
    description: 'Estad√≠sticas por categor√≠a'
  },
  {
    collection: 'componentes',
    index: { "numeroSerie": 1 },
    description: 'B√∫squedas por n√∫mero de serie'
  },
  {
    collection: 'componentes',
    index: { "createdAt": -1 },
    description: 'Ordenamiento por fecha de creaci√≥n'
  },

  // √çNDICES PARA ESTADOS DE MONITOREO
  {
    collection: 'estadomonitoreocomponentes',
    index: { "componenteId": 1, "alertaActiva": 1 },
    description: 'Consultas batch de estados por componente'
  },
  {
    collection: 'estadomonitoreocomponentes',
    index: { "componenteId": 1, "catalogoControlId": 1 },
    description: 'Relaci√≥n componente-control'
  },
  {
    collection: 'estadomonitoreocomponentes',
    index: { "alertaActiva": 1 },
    description: 'Filtros por alertas activas'
  },

  // √çNDICES PARA CAT√ÅLOGO CONTROL MONITOREO
  {
    collection: 'catalogocontrolmonitoreos',
    index: { "estado": 1 },
    description: 'Filtros por estado activo'
  },

  // √çNDICES COMPUESTOS CR√çTICOS
  {
    collection: 'componentes',
    index: { 
      "aeronaveActual": 1, 
      "estado": 1, 
      "alertasActivas": 1 
    },
    description: 'Consulta compuesta cr√≠tica para dashboard'
  }
];

// Comandos MongoDB para ejecutar
console.log('\nüìã COMANDOS PARA EJECUTAR EN MONGODB:');
console.log('=====================================\n');

indices.forEach((item, index) => {
  console.log(`// ${index + 1}. ${item.description}`);
  console.log(`db.${item.collection}.createIndex(${JSON.stringify(item.index, null, 2)});`);
  console.log('');
});

// Script completo para copy-paste
console.log('\nüöÄ SCRIPT COMPLETO PARA COPY-PASTE:');
console.log('===================================\n');

const script = indices.map(item => 
  `db.${item.collection}.createIndex(${JSON.stringify(item.index)});`
).join('\n');

console.log(script);

// Verificaci√≥n de √≠ndices
console.log('\n\n‚úÖ COMANDOS PARA VERIFICAR √çNDICES:');
console.log('==================================\n');
console.log('// Ver √≠ndices de aeronaves');
console.log('db.aeronaves.getIndexes();\n');
console.log('// Ver √≠ndices de componentes');
console.log('db.componentes.getIndexes();\n');
console.log('// Ver √≠ndices de estados de monitoreo');
console.log('db.estadomonitoreocomponentes.getIndexes();\n');

export default indices;